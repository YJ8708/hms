# Homework Management System
2013-09-15

## 开发环境
* Ruby1.9.2
* Rails3.2.13
* Ext4.2.0

## 常用命令
* 克隆项目：git clone wando@192.168.1.107:~/Public/Code/hms
* tig 查看提交纪录
* tig status 查看当前修改纪录
* git stash隐藏修改 
* git stash pop恢复隐藏修改

## 提交步骤
1. git add .   // 把本地要提交的代码移到changes to be committed
2. git commit -m '此次提交注释' // 对你更新或修改了哪些内容做一个描述。
3. git pull --rebase // 更新代码
4. git pull
5. git push origin master // 提交到远程仓库

## 注意事项
* 删除文件时，不要用git add .
git add . 不会把删除的文件提交到changes to be commited 上面
可以通过tig status 查看修改记录，选中需要删除的文件，按U把文件上移
再执行git commit -m 'XX' 提交代码，其他照旧

## 代码规范(详情请见192.168.1.107之代码规范)
1. ruby缩进两格，js缩进四格。
2. 不要有空格在 ( 、 [ 之后，或 ] 、 ) 之前。
3. 方法与变量使用蛇底式小写（snake_case）。
4. 类别与模组使用驼峰式大小写（CamelCase）。
5. 其他常数使用尖叫蛇底式大写（SCREAMING_SNAKE_CASE）。
6. 判断式方法的名字（返回布尔值的方法）应以问号结尾。 (即 Array#empty? )
7. 若你需要定义多个 member/collection 路由时，使用替代的区块语法

   resources :subscriptions do
     member do
       get 'unsubscribe'
       # 更多路由
     end
   end
   
   resources :photos do
     collection do
       get 'search'
       # 更多路由
     end
   end

8. 偏好 has_many :through 胜于 has_and_belongs_to_many。 使用 has_many :through 允许在 join 模型有附加的属性及验证

```javascript
# 偏好方式 - using has_many :through
  class User < ActiveRecord::Base
    has_many :memberships
    has_many :groups, through: :memberships
  end
  
  class Membership < ActiveRecord::Base
    belongs_to :user
    belongs_to :group
  end
  
  class Group < ActiveRecord::Base
    has_many :memberships
    has_many :users, through: :memberships
  end
```

